#name: Build and Test Spring Boot Application
#
#on:
#  push:
#    branches:
#      - pipeline2
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '17'
#
#      - name: Build with Maven
#        run: mvn clean install
#
#      - name: Setup MySQL
#        uses: mirromutth/mysql-action@v1.1
#        with:
#          mysql database: 'planet'
#          mysql root password: 'roott'
#          mysql user: 'root'
#          mysql password: 'roott'
#
#      - name: Run Spring Boot Application
#        env:
#          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/planet
#          SPRING_DATASOURCE_USERNAME: root
#          SPRING_DATASOURCE_PASSWORD: 'roott'
#        run: mvn spring-boot:run
name: Forest CI
env:
  MYSQL_DATABASE: planet
  MYSQL_ROOT_PASSWORD: password
  MYSQL_USER: test_user
  MYSQL_PASSWORD: password
  MYSQL_HOST: mysql-master
  NODE_ENV: test

on:
  push:
    branches:
      - pipeline
jobs:
  ci:
    runs-on: ubuntu-latest
    container:
      image: node:14.5.0-alpine
    services:
      mysql-master:
        image: mysql:5.7
        ports:
          - 3306/tcp
        env:
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
          MYSQL_USER: ${{ env.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_PASSWORD }}
        options: >-
          --name=mysql-master
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      spring-boot-app:
        image: openjdk:11-jdk
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://${{ env.MYSQL_HOST }}:3306/${{ env.MYSQL_DATABASE }}?serverTimezone=UTC
          SPRING_DATASOURCE_USERNAME: ${{ env.MYSQL_USER }}
          SPRING_DATASOURCE_PASSWORD: ${{ env.MYSQL_PASSWORD }}
        ports:
          - 8080:8080
    steps:
      - uses: actions/checkout@v2
      - name: Build with Maven
        run: mvn clean install

      - name: Run Spring Boot Application
        run: mvn spring-boot:run